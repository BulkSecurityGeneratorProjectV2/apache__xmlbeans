/*
This Java source file was generated by test-to-java.xsl
and is a derived work from the source document.
The source document contained the following notice:



Copyright (c) 2001 World Wide Web Consortium,
(Massachusetts Institute of Technology, Institut National de
Recherche en Informatique et en Automatique, Keio University).  All
Rights Reserved.  This program is distributed under the W3C's Software
Intellectual Property License.  This program is distributed in the
hope that it will be useful, but WITHOUT ANY WARRANTY; without even
the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
PURPOSE.

See W3C License http://www.w3.org/Consortium/Legal/ for more details.


*/

package org.w3c.domts.level2.core;


import org.junit.Ignore;
import org.junit.Test;
import org.w3c.dom.DOMImplementation;
import org.w3c.dom.Document;
import org.w3c.dom.DocumentType;
import org.w3c.domts.DOMTestCase;

import static org.junit.Assert.assertNotNull;
import static org.junit.Assert.assertNull;


/**
 * The method createDocumentType with valid values for qualifiedName, publicId and
 * systemId should create an empty DocumentType node.
 * <p>
 * Invoke createDocument on this DOMImplementation with a valid qualifiedName and different
 * publicIds and systemIds.  Check if the the DocumentType node was created with its
 * ownerDocument attribute set to null.
 *
 * @see <a href="http://www.w3.org/TR/DOM-Level-2-Core/core#Level-2-Core-DOM-createDocument">http://www.w3.org/TR/DOM-Level-2-Core/core#Level-2-Core-DOM-createDocument</a>
 */
public class domimplementationcreatedocumenttype01 extends DOMTestCase {
    @Test
    @Ignore
    public void testRun() throws Throwable {
        Document doc;
        DOMImplementation domImpl;
        DocumentType newDocType;
        Document ownerDocument;
        String qualifiedName = "test:root";
        String publicId;
        String systemId;
        java.util.List publicIds = new java.util.ArrayList();
        publicIds.add("1234");
        publicIds.add("test");

        java.util.List systemIds = new java.util.ArrayList();
        systemIds.add("");
        systemIds.add("test");

        doc = load("staffNS", false);
        domImpl = doc.getImplementation();
        for (int indexd355e61 = 0; indexd355e61 < publicIds.size(); indexd355e61++) {
            publicId = (String) publicIds.get(indexd355e61);
            for (int indexd355e63 = 0; indexd355e63 < systemIds.size(); indexd355e63++) {
                systemId = (String) systemIds.get(indexd355e63);
                newDocType = domImpl.createDocumentType(qualifiedName, publicId, systemId);
                assertNotNull("domimplementationcreatedocumenttype01_newDocType", newDocType);
                ownerDocument = newDocType.getOwnerDocument();
                assertNull("domimplementationcreatedocumenttype01_ownerDocument", ownerDocument);
            }
        }

    }

    /**
     * Gets URI that identifies the test
     *
     * @return uri identifier of test
     */
    public String getTargetURI() {
        return "http://www.w3.org/2001/DOM-Test-Suite/level2/core/domimplementationcreatedocumenttype01";
    }

}
